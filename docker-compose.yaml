version: "2"
services:
  consul:
    image: consul:1.15
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    networks:
      - exam
    command: agent -server -bootstrap-expect 1 -ui -data-dir /tmp -client=0.0.0.0

  postgres:
    build:
      context: ./resources/postgres
      dockerfile: Dockerfile
    container_name: postgresdb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: LibraryDB
    restart: always
    volumes:
      - library-storage:/var/lib/postgresql/data
    networks:
      - exam
  
  backend-library-app:
    container_name: backend-library-app
    image: ${DOCKER_REGISTRY-}backendlibraryapp
    build:
      context: ./backend-library-app
      dockerfile: backend-library-app/Dockerfile
    ports:
      - "5087:5087"
      - "8081:8081"
    environment:
      - ConnectionStrings__DefaultConnection=User ID=postgres; Password=postgres;Server=postgresdb;Port=5432;Database=LibraryDB;IntegratedSecurity=true;Pooling=true;
      - ASPNETCORE_URLS=http://+:5087
    networks:
      - exam
    depends_on:
      - postgres
      - consul
    
  frontend-library-app:
    image: ${DOCKER_REGISTRY-}frontendlibraryapp
    build:
      context: ./frontend-library-app
      dockerfile: Dockerfile
    ports:
      - "80"
    deploy:
      mode: replicated
      replicas: 2
    environment:
      - VITE_BACKEND=http://localhost:5087
    networks:
      - exam
    depends_on:
      - consul
      - backend-library-app
  
  loadbalancer:
    container_name: loadbalancer
    build:
      context: ./resources/haproxy
      dockerfile: Dockerfile
    ports:
      - "8000:80"
      - "1936:1936"
    networks:
      - exam

  express-gateway-data-store:
    container_name: express-gateway-data-store
    build: ./resources/appgw
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - exam

  express-gateway:
    container_name: express-gateway
    image: express-gateway
    ports:
      - "8080:8080"
      - "9876:9876"
    volumes:
      - type: bind
        source: ./resources/appgw
        target: /var/lib/eg
    networks:
      - exam
volumes:
  library-storage:

networks:
  exam:
    driver: bridge